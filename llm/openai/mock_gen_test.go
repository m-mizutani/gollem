// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package openai_test

import (
	"context"
	"github.com/sashabaranov/go-openai"
	"sync"
)

// apiClientMock is a mock implementation of openai.apiClient.
//
//	func TestSomethingThatUsesapiClient(t *testing.T) {
//
//		// make and configure a mocked openai.apiClient
//		mockedapiClient := &apiClientMock{
//			CreateChatCompletionFunc: func(ctx context.Context, req openai.ChatCompletionRequest) (openai.ChatCompletionResponse, error) {
//				panic("mock out the CreateChatCompletion method")
//			},
//			CreateChatCompletionStreamFunc: func(ctx context.Context, req openai.ChatCompletionRequest) (*openai.ChatCompletionStream, error) {
//				panic("mock out the CreateChatCompletionStream method")
//			},
//		}
//
//		// use mockedapiClient in code that requires openai.apiClient
//		// and then make assertions.
//
//	}
type apiClientMock struct {
	// CreateChatCompletionFunc mocks the CreateChatCompletion method.
	CreateChatCompletionFunc func(ctx context.Context, req openai.ChatCompletionRequest) (openai.ChatCompletionResponse, error)

	// CreateChatCompletionStreamFunc mocks the CreateChatCompletionStream method.
	CreateChatCompletionStreamFunc func(ctx context.Context, req openai.ChatCompletionRequest) (*openai.ChatCompletionStream, error)

	// calls tracks calls to the methods.
	calls struct {
		// CreateChatCompletion holds details about calls to the CreateChatCompletion method.
		CreateChatCompletion []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Req is the req argument value.
			Req openai.ChatCompletionRequest
		}
		// CreateChatCompletionStream holds details about calls to the CreateChatCompletionStream method.
		CreateChatCompletionStream []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Req is the req argument value.
			Req openai.ChatCompletionRequest
		}
	}
	lockCreateChatCompletion       sync.RWMutex
	lockCreateChatCompletionStream sync.RWMutex
}

// CreateChatCompletion calls CreateChatCompletionFunc.
func (mock *apiClientMock) CreateChatCompletion(ctx context.Context, req openai.ChatCompletionRequest) (openai.ChatCompletionResponse, error) {
	if mock.CreateChatCompletionFunc == nil {
		panic("apiClientMock.CreateChatCompletionFunc: method is nil but apiClient.CreateChatCompletion was just called")
	}
	callInfo := struct {
		Ctx context.Context
		Req openai.ChatCompletionRequest
	}{
		Ctx: ctx,
		Req: req,
	}
	mock.lockCreateChatCompletion.Lock()
	mock.calls.CreateChatCompletion = append(mock.calls.CreateChatCompletion, callInfo)
	mock.lockCreateChatCompletion.Unlock()
	return mock.CreateChatCompletionFunc(ctx, req)
}

// CreateChatCompletionCalls gets all the calls that were made to CreateChatCompletion.
// Check the length with:
//
//	len(mockedapiClient.CreateChatCompletionCalls())
func (mock *apiClientMock) CreateChatCompletionCalls() []struct {
	Ctx context.Context
	Req openai.ChatCompletionRequest
} {
	var calls []struct {
		Ctx context.Context
		Req openai.ChatCompletionRequest
	}
	mock.lockCreateChatCompletion.RLock()
	calls = mock.calls.CreateChatCompletion
	mock.lockCreateChatCompletion.RUnlock()
	return calls
}

// CreateChatCompletionStream calls CreateChatCompletionStreamFunc.
func (mock *apiClientMock) CreateChatCompletionStream(ctx context.Context, req openai.ChatCompletionRequest) (*openai.ChatCompletionStream, error) {
	if mock.CreateChatCompletionStreamFunc == nil {
		panic("apiClientMock.CreateChatCompletionStreamFunc: method is nil but apiClient.CreateChatCompletionStream was just called")
	}
	callInfo := struct {
		Ctx context.Context
		Req openai.ChatCompletionRequest
	}{
		Ctx: ctx,
		Req: req,
	}
	mock.lockCreateChatCompletionStream.Lock()
	mock.calls.CreateChatCompletionStream = append(mock.calls.CreateChatCompletionStream, callInfo)
	mock.lockCreateChatCompletionStream.Unlock()
	return mock.CreateChatCompletionStreamFunc(ctx, req)
}

// CreateChatCompletionStreamCalls gets all the calls that were made to CreateChatCompletionStream.
// Check the length with:
//
//	len(mockedapiClient.CreateChatCompletionStreamCalls())
func (mock *apiClientMock) CreateChatCompletionStreamCalls() []struct {
	Ctx context.Context
	Req openai.ChatCompletionRequest
} {
	var calls []struct {
		Ctx context.Context
		Req openai.ChatCompletionRequest
	}
	mock.lockCreateChatCompletionStream.RLock()
	calls = mock.calls.CreateChatCompletionStream
	mock.lockCreateChatCompletionStream.RUnlock()
	return calls
}
